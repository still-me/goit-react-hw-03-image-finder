{"version":3,"sources":["services/image-finder-api.js","components/Loader/Loader.js","components/Searchbar/Searchbar.js","images/default.jpeg","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","App.js","index.js"],"names":["fetchImagesApi","searchQuery","currentPage","axios","get","then","data","hits","reactLoader","className","type","color","height","width","Searchbar","state","query","handelChange","e","setState","currentTarget","value","handelSubmit","preventDefault","props","onSubmit","this","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","src","alt","defaultProps","defaultImage","ImageGallery","images","onImageClick","onClick","map","webformatURL","tags","id","Button","modalRoot","document","querySelector","Modal","onEscapeKeydown","code","onClose","onBackdropClick","target","window","addEventListener","removeEventListener","createPortal","App","largeImage","isLoading","error","fetchImages","options","prevState","catch","finally","onChangeQuery","onCloseModal","prevProps","length","scrollTo","top","documentElement","scrollHeight","behavior","ShouldButtonBeVisible","style","ReactDOM","render","StrictMode","getElementById"],"mappings":"qaAaeA,EARQ,SAAC,GAA2C,IAAD,IAAxCC,mBAAwC,MAA1B,GAA0B,MAAtBC,mBAAsB,MAAR,EAAQ,EAChE,OAAOC,IACJC,IADI,UAJQ,2BAIR,cAEcH,EAFd,iBAEkCC,EAFlC,gBAHO,qCAGP,yDAIJG,MAAK,qBAAGC,KAAgBC,S,gCCDdC,EANK,kBAClB,qBAAKC,UAAU,SAAf,SACE,cAAC,IAAD,CAAQC,KAAK,eAAeC,MAAM,UAAUC,OAAQ,IAAKC,MAAO,SC6CrDC,G,kNA5CbC,MAAQ,CACNC,MAAO,I,EAGTC,aAAe,SAACC,GACd,EAAKC,SAAS,CAAEH,MAAOE,EAAEE,cAAcC,S,EAGzCC,aAAe,SAACJ,GACdA,EAAEK,iBAEF,EAAKC,MAAMC,SAAS,EAAKV,MAAMC,OAC/B,EAAKG,SAAS,CAAEH,MAAO,M,4CAGzB,WACE,IAAQA,EAAUU,KAAKX,MAAfC,MAER,OACE,wBAAQP,UAAU,YAAlB,SACE,uBAAMA,UAAU,aAAagB,SAAUC,KAAKJ,aAA5C,UACE,wBAAQZ,KAAK,SAASD,UAAU,oBAAhC,SACE,sBAAMA,UAAU,0BAAhB,sBAGF,uBACEA,UAAU,mBACVC,KAAK,OACLiB,aAAa,MACbC,WAAS,EACTC,YAAY,2BACZC,SAAUJ,KAAKT,aACfI,MAAOL,a,GAjCKe,cCLT,G,YAAA,IAA0B,sCCKnCC,EAAmB,SAAC,GAAD,IAAGC,EAAH,EAAGA,IAAKC,EAAR,EAAQA,IAAR,OACvB,oBAAIzB,UAAU,mBAAd,SACE,qBAAKwB,IAAKA,EAAKC,IAAKA,EAAKzB,UAAU,8BAIvCuB,EAAiBG,aAAe,CAC9BF,IAAKG,EACLF,IAAK,6CAQQF,QCHAK,EAbM,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,aAAX,OACnB,oBAAI9B,UAAU,eAAe+B,QAASD,EAAtC,SACGD,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,KAAMC,EAAvB,EAAuBA,GAAvB,OACV,cAAC,EAAD,CAA2BX,IAAKS,EAAcR,IAAKS,GAA5BC,SCIdC,G,MATA,SAAC,GAAD,IAAGL,EAAH,EAAGA,QAAH,OACb,wBAAQ/B,UAAU,SAAS+B,QAASA,EAApC,yBCIIM,G,MAAYC,SAASC,cAAc,gBAEnCC,E,4MACJlC,MAAQ,G,EAURmC,gBAAkB,SAAChC,GACF,WAAXA,EAAEiC,MACJ,EAAK3B,MAAM4B,W,EAIfC,gBAAkB,SAACnC,GACbA,EAAEE,gBAAkBF,EAAEoC,QACxB,EAAK9B,MAAM4B,W,uDAhBf,WACEG,OAAOC,iBAAiB,UAAW9B,KAAKwB,mB,kCAG1C,WACEK,OAAOE,oBAAoB,UAAW/B,KAAKwB,mB,oBAc7C,WACE,MAAqBxB,KAAKF,MAAlBS,EAAR,EAAQA,IAAKC,EAAb,EAAaA,IAEb,OAAOwB,uBACL,qBAAKjD,UAAU,UAAU+B,QAASd,KAAK2B,gBAAvC,SACE,qBAAK5C,UAAU,QAAf,SACE,qBAAKwB,IAAKA,EAAKC,IAAKA,QAGxBY,O,GA/Bcf,aAoCpBkB,EAAMd,aAAe,CACnBF,IAAKG,EACLF,IAAK,6CASQe,QCwDAU,E,4MAvGb5C,MAAQ,CACNuB,OAAQ,GACRsB,WAAY,CACV3B,IAAK,GACLC,IAAK,IAEPhC,YAAa,EACbD,YAAa,GACb4D,WAAW,EACXC,MAAO,M,EAgBTC,YAAc,WACZ,MAAqC,EAAKhD,MACpCiD,EAAU,CAAE/D,YADlB,EAAQA,YACuBC,YAD/B,EAAqBA,aAGrB,EAAKiB,SAAS,CAAE0C,WAAW,IAE3B7D,EAAegE,GACZ3D,MAAK,SAACiC,GAAD,OACJ,EAAKnB,UAAS,SAAC8C,GAAD,MAAgB,CAC5B3B,OAAO,GAAD,mBAAM2B,EAAU3B,QAAhB,YAA2BA,IACjCpC,YAAa+D,EAAU/D,YAAc,SAGxCgE,OAAM,SAACJ,GAAD,OAAW,EAAK3C,SAAS,CAAE2C,aACjCK,SAAQ,kBAAM,EAAKhD,SAAS,CAAE0C,WAAW,Q,EAG9CO,cAAgB,SAACpD,GACf,EAAKG,SAAS,CACZmB,OAAQ,GACRpC,YAAa,EACbD,YAAae,EACb8C,MAAO,Q,EAIXvB,aAAe,SAACrB,GACd,IAAMe,EAAMf,EAAEoC,OAAOrB,IACfC,EAAMhB,EAAEoC,OAAOpB,IAEjBhB,EAAEoC,SAAWpC,EAAEE,eAGnB,EAAKD,SAAS,CAAEyC,WAAY,CAAE3B,MAAKC,U,EAGrCmC,aAAe,WACb,EAAKlD,SAAS,CACZyC,WAAY,CACV3B,IAAK,GACLC,IAAK,O,wDArDX,SAAmBoC,EAAWL,GACxBA,EAAUhE,cAAgByB,KAAKX,MAAMd,aACvCyB,KAAKqC,cAGHrC,KAAKX,MAAMuB,OAAOiC,OAAS,IAC7BhB,OAAOiB,SAAS,CACdC,IAAK1B,SAAS2B,gBAAgBC,aAC9BC,SAAU,a,oBAkDhB,WACE,MAAiDlD,KAAKX,MAA9C8C,EAAR,EAAQA,UAAWvB,EAAnB,EAAmBA,OAAQsB,EAA3B,EAA2BA,WAAYE,EAAvC,EAAuCA,MACjCe,EAAwBvC,EAAOiC,OAAS,IAAMV,EAEpD,OACE,sBAAKpD,UAAU,MAAf,UACGoD,GAAa,cAAC,EAAD,IAEd,cAAC,EAAD,CAAWpC,SAAUC,KAAK0C,gBAEzBN,GACC,kTAEE,uBAAMgB,MAAO,CAAEnE,MAAO,OAAtB,cAAiCmD,QAIrC,cAAC,EAAD,CAAcxB,OAAQA,EAAQC,aAAcb,KAAKa,eAEhDsC,GAAyB,cAAC,EAAD,CAAQrC,QAASd,KAAKqC,cAE5B,KAAnBH,EAAW3B,KACV,cAAC,EAAD,CACEA,IAAK2B,EAAW3B,IAChBC,IAAK0B,EAAW1B,IAChBkB,QAAS1B,KAAK2C,sB,GAhGRtC,a,YCFlBgD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlC,SAASmC,eAAe,W","file":"static/js/main.b01bc8da.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = \"https://pixabay.com/api/\";\nconst API_KEY = \"21079808-fc3c19baaaeb0df1cf39adfe9\";\n\nconst fetchImagesApi = ({ searchQuery = \"\", currentPage = 1 }) => {\n  return axios\n    .get(\n      `${BASE_URL}?q=${searchQuery}&page=${currentPage}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`\n    )\n    .then(({ data }) => data.hits);\n};\n\nexport default fetchImagesApi;\n","import \"./Loader.scss\";\nimport Loader from \"react-loader-spinner\";\n\nconst reactLoader = () => (\n  <div className=\"Loader\">\n    <Loader type=\"BallTriangle\" color=\"#f05d00\" height={100} width={100} />\n  </div>\n);\n\nexport default reactLoader;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./Searchbar.scss\";\n\nclass Searchbar extends Component {\n  state = {\n    query: \"\",\n  };\n\n  handelChange = (e) => {\n    this.setState({ query: e.currentTarget.value });\n  };\n\n  handelSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state.query);\n    this.setState({ query: \"\" });\n  };\n\n  render() {\n    const { query } = this.state;\n\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handelSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            onChange={this.handelChange}\n            value={query}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","export default __webpack_public_path__ + \"static/media/default.2e01288c.jpeg\";","import PropTypes from \"prop-types\";\n\nimport \"./ImageGalleryItem..scss\";\nimport defaultImage from \"../../images/default.jpeg\";\n\nconst ImageGalleryItem = ({ src, alt }) => (\n  <li className=\"ImageGalleryItem\">\n    <img src={src} alt={alt} className=\"ImageGalleryItem-image\" />\n  </li>\n);\n\nImageGalleryItem.defaultProps = {\n  src: defaultImage,\n  alt: \"unfortunately image was loaded with error\",\n};\n\nImageGalleryItem.propTypes = {\n  src: PropTypes.string,\n  alt: PropTypes.string,\n};\n\nexport default ImageGalleryItem;\n","import PropTypes from \"prop-types\";\n\nimport \"./ImageGallery.scss\";\nimport ImageGalleryItem from \"../ImageGalleryItem\";\n\nconst ImageGallery = ({ images, onImageClick }) => (\n  <ul className=\"ImageGallery\" onClick={onImageClick}>\n    {images.map(({ webformatURL, tags, id }) => (\n      <ImageGalleryItem key={id} src={webformatURL} alt={tags} />\n    ))}\n  </ul>\n);\n\nImageGallery.propTypes = {\n  images: PropTypes.array.isRequired,\n  onImageClick: PropTypes.func.isRequired,\n};\n\nexport default ImageGallery;\n","import \"./Button.scss\";\nimport PropTypes from \"prop-types\";\n\nconst Button = ({ onClick }) => (\n  <button className=\"Button\" onClick={onClick}>\n    load more\n  </button>\n);\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\nexport default Button;\n","import React, { Component } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport PropTypes from \"prop-types\";\n\nimport defaultImage from \"../../images/default.jpeg\";\n\nimport \"./Modal.scss\";\n\nconst modalRoot = document.querySelector(\"#modal-root\");\n\nclass Modal extends Component {\n  state = {};\n\n  componentDidMount() {\n    window.addEventListener(\"keydown\", this.onEscapeKeydown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"keydown\", this.onEscapeKeydown);\n  }\n\n  onEscapeKeydown = (e) => {\n    if (e.code === \"Escape\") {\n      this.props.onClose();\n    }\n  };\n\n  onBackdropClick = (e) => {\n    if (e.currentTarget === e.target) {\n      this.props.onClose();\n    }\n  };\n  render() {\n    const { src, alt } = this.props;\n\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.onBackdropClick}>\n        <div className=\"Modal\">\n          <img src={src} alt={alt} />\n        </div>\n      </div>,\n      modalRoot\n    );\n  }\n}\n\nModal.defaultProps = {\n  src: defaultImage,\n  alt: \"unfortunately image was loaded with error\",\n};\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  src: PropTypes.string,\n  alt: PropTypes.string,\n};\n\nexport default Modal;\n","import React, { Component } from \"react\";\nimport \"./App.scss\";\nimport fetchImagesApi from \"./services/image-finder-api\";\nimport Loader from \"./components/Loader\";\nimport Searchbar from \"./components/Searchbar\";\nimport ImageGallery from \"./components/ImageGallery\";\nimport Button from \"./components/Button\";\nimport Modal from \"./components/Modal\";\n\nclass App extends Component {\n  state = {\n    images: [],\n    largeImage: {\n      src: \"\",\n      alt: \"\",\n    },\n    currentPage: 1,\n    searchQuery: \"\",\n    isLoading: false,\n    error: null,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      this.fetchImages();\n    }\n\n    if (this.state.images.length > 14) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: \"smooth\",\n      });\n    }\n  }\n\n  fetchImages = () => {\n    const { searchQuery, currentPage } = this.state;\n    const options = { searchQuery, currentPage };\n\n    this.setState({ isLoading: true });\n\n    fetchImagesApi(options)\n      .then((images) =>\n        this.setState((prevState) => ({\n          images: [...prevState.images, ...images],\n          currentPage: prevState.currentPage + 1,\n        }))\n      )\n      .catch((error) => this.setState({ error }))\n      .finally(() => this.setState({ isLoading: false }));\n  };\n\n  onChangeQuery = (query) => {\n    this.setState({\n      images: [],\n      currentPage: 1,\n      searchQuery: query,\n      error: null,\n    });\n  };\n\n  onImageClick = (e) => {\n    const src = e.target.src;\n    const alt = e.target.alt;\n\n    if (e.target === e.currentTarget) {\n      return;\n    }\n    this.setState({ largeImage: { src, alt } });\n  };\n\n  onCloseModal = () => {\n    this.setState({\n      largeImage: {\n        src: \"\",\n        alt: \"\",\n      },\n    });\n  };\n\n  render() {\n    const { isLoading, images, largeImage, error } = this.state;\n    const ShouldButtonBeVisible = images.length > 0 && !isLoading;\n\n    return (\n      <div className=\"App\">\n        {isLoading && <Loader />}\n\n        <Searchbar onSubmit={this.onChangeQuery} />\n\n        {error && (\n          <h1>\n            К сожалению, при загрузке возникла следующая ошибка:\n            <span style={{ color: \"red\" }}> {error}</span>\n          </h1>\n        )}\n\n        <ImageGallery images={images} onImageClick={this.onImageClick} />\n\n        {ShouldButtonBeVisible && <Button onClick={this.fetchImages} />}\n\n        {largeImage.src !== \"\" && (\n          <Modal\n            src={largeImage.src}\n            alt={largeImage.alt}\n            onClose={this.onCloseModal}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./styles/base.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}